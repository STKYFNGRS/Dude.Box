DUDE.BOX CODING STANDARDS AND BEST PRACTICES
Last Updated: November 28, 2024

1. WEB3 STANDARDS
----------------------------
Smart Wallet Integration:
- Always use latest Coinbase SDK version
- Follow provider initialization pattern:
```typescript
const sdk = createCoinbaseWalletSDK({
  appName: "Dude Box",
  appLogoUrl: "/Dude logo 3.jpg",
  appChainIds: [84532],
  preference: {
    options: "smartWalletOnly",
    attribution: {
      auto: true,
    }
  }
});
```

Error Handling Pattern:
```typescript
try {
  // Web3 operation
} catch (error) {
  if (error.code === 4001) {
    // User rejected
  } else if (error.code === 4902) {
    // Chain not available
  } else {
    // Generic error
  }
}
```

2. COMPONENT PATTERNS
----------------------------
Wallet Components:
- Use shadcn/ui for consistency
- Implement loading states
- Handle error states
- Show connection status

Example Structure:
```tsx
<div className="wallet-component">
  <WalletStatus />
  <NetworkSelector />
  <TransactionList />
  <ActionButtons />
</div>
```

3. STATE MANAGEMENT
----------------------------
Web3 Context Pattern:
- Use reducer for complex state
- Implement proper typing
- Handle cleanup
- Manage subscriptions

[Previous sections remain unchanged...]